@page "{AlertId}"
@model WeatherDashboard.Pages.AlertModel
@{
    string[] description = Model.alert.properties.description.Split('*');
    string[] separatedInstructions = Model.alert.properties.instruction.Split("\n\n");
    string[] urls = null;
}
<link rel="stylesheet" href="~/css/alert.css" />
<h1>@Model.alert.properties.headline</h1>
@foreach (string item in description) {
    if (item.Length != 0)
    {
        string[] separated = item.Split("...");
        <p><span class="title">@separated[0]</span><span class="text">@separated[1]</span></p>
    }
}
<div class="instructions">
    @foreach (string item in separatedInstructions)
    {
        <p class="instruct"></p>
        <script>
        </script>
    }
</div>
<script>
    function extractUrl(from) {
        return use.exec(from)
    }

    let instructs = document.getElementsByClassName("instruct");
    let use = /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0 - 9]+([\-\.]{ 1}[a-z0 - 9]+)*\.[a-z]{ 2,5}(:[0 - 9]{1,5})?(\/.*)?$/;
    let len = instructs.length;
    for (i = 0; i < len; i++) {
        instructs[i].innerText = instructs[i].innerText.Replace('\n', ' ');
        let urls = use.exec(instructs[i].innerText);
        for (x = 0; x < urls.length; x++) {
            instructs[i].innerHTML = instructs[i].innerHTML.replace(urls[x], "<a class ='text-dark' href='" + urls[x] + "'>" + urls[x] + "</a>")
        }
    }

</script>
